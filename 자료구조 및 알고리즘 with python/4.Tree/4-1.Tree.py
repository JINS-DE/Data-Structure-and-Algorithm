'''
트리란 ?
- 트리는 나무 모양의 자료구조이다.
- 회사의 조직도 같은 계층적인 자료를 표현하는데 용이하다.
- 비선형 자료구조이다.
- 트리의 활조
    - 운영체제 파일 시스템
    - 효율적인 탐색 기능
    - 우선순위 큐를 효율적으로 구현
    - 의사 결정 구조를 표현하기 위한 중요한 방법으로 결정 트리 사용
- 트리의 관련 용어
    - 노드(node) : 트리에서의 각각의 요소
    - 간선/에지(edge) : 노드와 노드의 연결 관계
    - 루트(root) : 가장 높은 곳에 있는 노드
    - 부모(parent)노드 : 간선으로 직접 연결된 노드 중에 상위 노드
    - 자식(child)노드 : 간선으로 직접 연결된 노드 중에 하위 노드
    - 형제(sibling)노드 : 같은 부모 노드를 가진 노드
    - 조상(ancestor)노드 : 어떤 노드에서 루트 노드까지의 경로상에 있는 모든 노드
    - 자손(descendent)노드 : 어떤 노드 하위에 연결된 모든 노드
    - 단말(terminal, leaf)노드 : 자식 노드가 없는 노드, 자식이 있으면 비단말 노드
    - 노드의 차수(degree) : 노드가 가지고 있는 자식의 수. 단말 노드는 항상 0
    - 트리의 차수 : 트리에 포함된 모든 노드의 차수 중에서 가장 큰 수
    - 레벨(level) : 트리의 각층에 번호를 매기는 것, 루트 노드의 레벨은 1이고 한 층씩 내려갈수록 레벨은 1씩 증가
    - 트리의 높이(height) : 트리가 가지고 있는 최대 레벨

- 트리는 순환적으로 정의되는 자료구조라 볼 수 있고, 순환호출을 사용하는 순환 알고리즘이 흔히 사용된다.

- 트리의 표현 방법
    - 트리는 중첩된 집합으로도 나타낼 수 있다.(트리는 서브 트리들의 집합)
    - 트리의 루트와 서브 트리를 중첩된 괄호로 묶어 표현 가능
        ex)(A (B(E)(F)(G(K))) (C(H)) (D(I)(J)))
    - 트리는 들여쓰기로도 나타낼 수 있다(윈도 탐색기에서 폴더와 파일을 나타낼 때)
        ex) A
                B
                    E
                    F
                    G
                        K
                C
                    H
                D
                    I
                    J
- 일반 트리(General Tree) : 자식의 개수에 제한이 없는 트리 
    - N-링크 표현 
        -> 차수가 N인 노드가 N개의 링크를 갖도록 허용
        -> 각 노드는 하나의 데이터 필드와 자식 노드 개수만큼의 링크를 갖는다.
        -> 노드마다 링크의 개수가 다르다는 문제가 있다.
    - 왼쪽 자식 - 오른쪽 형제 표현
        -> 하나의 링크는 왼쪽 자식(첫 번째 자식, child)를 가리킨다.
        -> 다른 하나는 오른쪽 형제(다음 형제,sibling)를 가리키기 위해 사용
        -> 비교적 단순한 형태의 노드를 이용해 임의의 일반 트리를 표현 할 수 있지만,
            but ! 표현이 복잡하고 특히 루트에서 단말 노드까지 찾아가는 과정에서 필요 없이 많은 노드를 거쳐야 한다.

- 실제로는 좀 더 단순한 형태의 트리를 많이 사용한다. 아이디어는 트리 노드의 자식 수에 제한을 둔다.


'''
